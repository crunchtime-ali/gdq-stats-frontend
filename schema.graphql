type CreateEvent {
  name: String!
  year: Int!
}

input CreateEventTypeInput {
  description: String!
  name: String!
}

input DeleteEventTypeInput {
  id: ID!
}

type Event {
  completed_games_count: Int!
  donation_amount: Float!
  donation_count: Int!
  end_date: Time!
  eventType: EventType!
  id: ID!
  max_viewers_count: Int!
  start_date: Time!
  tweets_count: Int!
  twitch_chats_count: Int!
  year: Int!
}

type EventType {
  description: String!
  id: ID!
  name: String!
}

input MigrateEventDataInput {
  id: ID!
}

type Mutation {
  createEventType(input: CreateEventTypeInput!): EventType!
  deleteEventType(input: DeleteEventTypeInput!): EventType!
  migrateEventData(input: MigrateEventDataInput!): Event!
  updateEventType(input: UpdateEventTypeInput!): EventType!
}

type Query {
  getCurrentEvent: Event!
  getEventTypes: [EventType!]!
  getEvents: [Event!]!
}

scalar Time

input UpdateEventTypeInput {
  description: String
  id: ID!
  name: String
}
